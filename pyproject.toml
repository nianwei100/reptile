[tool.poetry]
name = "reptile"
version = "0.1.0"
description = "Python Type Hint"
authors = ["nianwei <2297709907@qq.com>"]
readme = "README.rst"

[tool.poetry.dependencies]
python = "^3.8"

[[tool.poetry.source]]
name = "mirrors"
url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/"
priority = "primary"

[tool.poetry.group.dev.dependencies]
ruff = {extras = ["jupyter"], version = "^0.6.8"}
rich = {extras = ["jupyter"], version = "^13.9.1"}
pretty-errors = "^1.2.25"
mypy = "~1.10"
pre-commit = "^3"
fake-useragent = "^1.5.1"
faker = "^30.1.0"
pendulum = "^3.0.0"
toolz = "^0.12.1"
bs4 = "^0.0.2"
requests = "^2.32.3"
ipykernel = "^6.29.5"
yamlfix = "~1"
returns = {version = "~0", extras = ["compatible-mypy"]}
mycli = "^1.27.2"
pgcli = "^4.1.0"
litecli = "^1.12.3"
pytest = "^8.3.3"
python-dotenv = "^1.0.1"
iredis = "^1.15.0"
loguru = "^0.7.2"
pandas = "^2"


[tool.poetry.group.pro.dependencies]
bs4 = "^0.0.2"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py38"
line-length = 119
extend-include = ["*.ipynb"]
exclude = [".venv"]
fix = true
cache-dir = ".cache/ruff"


[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
lines-after-imports = 1
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
skip-magic-trailing-comma = false

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = false
disallow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
warn_unused_ignores = true

[tool.yamlfix]
line_length = 119
indentation = 2
